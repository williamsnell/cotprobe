Answer the following multiple choice question, selecting from the answer A through to J. After thinking, reply directly with your answer. 

The last character of your response must be the letter you have chosen.

Question:

A phase-shift keying system suffers from imperfect synchronization. Determine \textphi so that the P_e(PSK) =P_e(DPSK) = 10^-5

Options:

A: 30^0
B: 22^0
C: 40^0
D: 12^0
E: 24^0
F: 15^0
G: 36^0
H: 20^0
I: 27^0
J: 18^0

Answer:
    <think>
<think>
Hmm, I have this question about phase-shift keying (PSK) and direct current (DC) keying (DPSK) systems. The question says that both systems have the same bit error probability of 10^-5, and I need to find the phase shift phi for the PSK system. The options are angles in degrees.

Okay, so I remember that in PSK, the bit error rate (BER) depends on the phase shift. The formula for PSK's BER is something like P_e = 0.5 * (1 - cos(phi)), where phi is the phase shift in radians. Or wait, no, maybe it's in degrees? I need to get the formula right.

Wait, I think the formula for the phase shift keying's BER is (1 - cos(theta)) / 2, where theta is the phase angle in radians. Or is it in degrees? Let me think. Oh right, the formula for the BER of PSK is P_e = (1 - cos(theta/2)) / 2. Wait, no, I'm a bit confused. Let me double-check.

Wait, no, I think the correct formula for PSK's bit error rate is P_e = (1 - cos(phi))/2, where phi is the phase shift in radians. But wait, sometimes it's expressed in degrees. Oh wait, no, perhaps the formula is P_e = (1 - cos(theta)) * 0.5, where theta is the phase shift in radians. Or maybe in degrees, it's (1 - cos(θ)) / 2, where θ is in degrees.

Wait, no, I think I might have mixed up the formulas. Let me think again. Oh wait, no, I think for a phase shift keying system, the BER is given by P_e = (1 - cos(2*theta)) / 2, where theta is the phase shift in radians. Because each bit is separated by a certain phase shift, so the probability of error is based on the overlap of the two possible phases.

Alternatively, another formula I've read is that the probability of error for PSK is P_e = 0.5 * (1 - cos(phi)), where phi is the angle in radians. So, for example, if phi is 30 degrees, then cos(30°) is about 0.866, so 1-0.866 is 0.134, multiplied by 0.5 gives P_e = 0.067, which is about 6.7%. Hmm.

Wait but wait, in some sources, the formula is different. Let me think about the general PSK BER. For M-PSK, the BER is (sin^2(πθ/M)) / 2, where θ is the phase shift. Oh wait, maybe for the case where theta is 180 degrees divided by M, but I'm not sure. Hmm, but this question is about comparing two systems, so maybe the formula is the same regardless of M, or perhaps the question is simplified.

But in this question, both PSK and DPSK have the same P_e. Oh wait, no, the question says P_e(PSK) = P_e(DPSK) = 1e-5. So I need to find the phase shift phi for PSK such that its P_e equals that of a DPSK system.

Wait, wait, what's the P_e for DPSK? Oh, for direct current keying, the probability of error is (1 - cos(theta)) / 2, where theta is the phase shift in radians. Because it's a binary system, and the two possible phases are 0 and theta. So the error occurs when the received phase is in the middle, which is the case when the phase is within theta/2 of either of the two possible phases.

Wait, no, perhaps for the direct current (DC) keying system, the probability of error is P_e = (1 - cos(theta)) / 2. Because the two possible phases are separated by theta, and the probability of being in the middle is (theta/2)/(2pi) * 100% if theta is in radians, but I'm not sure.

Alternatively, the formula I remember for the DC keying system's P_e is (1 - cos(theta)) / 2. So for example, if theta is 0 degrees, P_e is zero (as expected, no error), but if theta is 180 degrees, cos(180) is -1, so (1 - (-1))/2 is 1, which can't be right. Oh wait, perhaps the formula is P_e = (1 - cos(theta)) / 2, but only if theta is in radians, and I'm not accounting for the fact that theta is in a specific range.

Wait, another approach. Let's think about the error probability. For PSK, when you have M-PSK, the error occurs when the received phase is in the middle between two adjacent symbols. So the probability of error is (sin^2(π/M)) / 2. But the formula given in the problem is P_e = (1 - cos(phi))/2, where phi is the phase shift.

Wait, perhaps in this problem, phi is the phase shift in radians. So for a given phi, the P_e for PSK is (1 - cos(phi))/2.

For the same P_e, the DC system's formula is also (1 - cos(theta))/2, where theta is the phase shift in radians.

Wait, but the question says that PSK and DC have the same P_e. So, if I set their P_e equal, then (1 - cos(phi))/2 = (1 - cos(theta))/2. So phi would equal theta for the same P_e. But wait, no, that's not the case here.

Wait, no, perhaps the formula for DC keying is different. Because I'm a bit confused. Let me look up the correct formula again.

Wait, I'm getting a bit stuck. Let me try to think again. For DC keying, the error occurs when the received signal is in the middle of two adjacent bins. So the probability is (1 - cos(theta))/2, where theta is the phase shift in radians.

Wait, for example, if theta is pi radians (180 degrees), then cos(pi) is -1, so (1 - (-1))/2 = (2)/2 = 1. So P_e would be 100%, which makes sense because if the phase shift is 180 degrees, the two possible phases are opposite each other, so the signal is in the middle 180% of the time, which would cause an error.

Wait, but wait, in the case where theta is 0, that would mean both phases are the same, so I'm not sure how that would apply. If theta is 0, then cos(0)=1, so (1-1)/2=0. That would mean no error, which makes sense because if the two phases are the same, you can't have any errors. So that makes sense.

So for the DC system, P_e is (1 - cos(theta))/2.

Now for the PSK system, I'm assuming the formula is P_e = (1 - cos(phi))/2, where phi is the phase shift in radians.

Wait, but in the problem statement, it says the P_e(PSK) equals P_e(DC). So (1 - cos(phi))/2 = (1 - cos(theta))/2. So in this case, phi would be equal to theta. But that can't be the case because the options are different. So perhaps I got the formula wrong.

Alternatively, perhaps the formula for PSK is different. Maybe it's (1 - cos(theta)) / 2, but that doesn't seem right. Or maybe I should think about the formula differently.

Wait, perhaps the formula for the probability of error in the DC system is (1 - cos(theta))/2. Because for DC, the probability is (1 - cos(theta)) / 2.

Wait, but that would imply that for the same P_e, the phase shift would be the same for both systems, but the options are different.

Alternatively, perhaps the formula for PSK is (sin(theta/2))^2, but I'm not sure.

Wait, another approach: I know that for 8-PSK, the P_e is (1 - cos(2π/M)) / 2, where M is the number of points. For example, for M=8, 2π/8 is 45 degrees, so cos(45) is about 0.707, so 1-0.707 is about 0.293, divided by 2 gives 0.1465. So 14.65% error rate.

But I don't know the number of points for the problem. So perhaps the formula is P_e = (1 - cos(phi)) / 2, where phi is in radians.

Wait, wait, perhaps I should think of it another way. Let's assume that for both systems, the P_e is given by the same formula. So for the DC system, let's say theta is the phase shift in radians. For the PSK system, the same theta would be used. So (1 - cos(theta))/2 is equal for both.

So phi is theta. So I need to find theta such that 1 - cos(theta) = 2 * P_e.

Given that P_e is 1e-5, so 1 - cos(theta) = 2 * 1e-5, which is 2e-5.

So cos(theta) = 1 - 2e-5. Let me compute that. 2e-5 is 0.00002. So 1 - 0.00002 is 0.99998.

So theta = arccos(0.99998) in radians.

Let me compute that. Hmm, what's the angle whose cosine is 0.99998? Let's think in terms of small angles, where cos(theta) ≈ 1 - (theta^2)/2.

Wait, let me use the approximation: cos(theta) ≈ 1 - (theta^2)/2 for small theta.

So 1 - (theta^2)/2 ≈ 0.99998.

So theta^2/2 ≈ 1 - 0.99998 = 0.00002.

So theta^2 ≈ 0.00004.

theta ≈ sqrt(0.00004) = sqrt(4e-5) = 2e-2.5 = 2 * 10^-2.5. Wait, 1e-5 is 1e-5, so sqrt(0.00004) is 0.02. So theta ≈ 0.02 radians.

But wait, 0.02 radians is about 1.1459 degrees. Hmm, but that's not among the options. So perhaps my approach is wrong.

Wait, but wait, maybe the formula is different. Because I thought the formula for DC keying is (1 - cos(theta))/2, but perhaps it's something else. Alternatively, perhaps the formula for PSK is (1 - cos(theta))/2, for theta in degrees. But that would complicate things.

Wait, another approach. Perhaps the problem is that both systems are in the same condition, but perhaps the formula for PSK is (1 - cos(theta)), and for DC it's (1 - cos(theta))/2. Then, setting (1 - cos(theta)) = (1 - cos(theta))/2, but that would only be possible if (1 - cos(theta))=0, which isn't the case.

Alternatively, perhaps the PSK formula is (1 - cos(theta)), and the DC formula is (1 - cos(theta))/2. So setting them equal would give the same condition as before, but the previous calculation doesn't give any of the provided options.

Hmm, perhaps I'm missing something. Let me think again.

Wait, the problem says P_e(PSK) = P_e(DC) = 1e-5. So:

P_e(PSK) = (1 - cos(phi))/2 = 1e-5.

P_e(DC) = (1 - cos(theta))/2 = 1e-5.

So, we have (1 - cos(phi))/2 = (1 - cos(theta))/2.

So, 1 - cos(phi) = 1 - cos(theta) → cos(phi) = cos(theta).

Which implies phi = theta or phi = -theta, considering the periodicity of cosine.

But the options are all positive angles, so phi equals theta.

So, for both systems, the phase shift theta is the same. But the options are different. So perhaps I made a mistake in the formula.

Wait, perhaps the formula for PSK is P_e = (1 - cos(phi))/2, and for DC it's (1 - cos(theta))/2, but maybe (1 - cos(theta)) is for DC, and (1 - cos(phi)) is for PSK.

But according to the problem statement, the P_e's are equal, so (1 - cos(phi))/2 = (1 - cos(theta))/2 → phi = theta.

But the options don't have same thetas. So perhaps the formula for DC is different. Alternatively, perhaps I should think about the formula for the error rate in another way.

Alternatively, perhaps the formula for DC keying is (1 - cos(theta))/2, and for PSK, it's (sin^2(theta/2))/2. Because for M-PSK, the error is sin^2(pi/M), but that might be a different approach.

Wait, let's try the PSK formula again. The formula for the bit error probability in M-PSK is P_e = (sin^2(π/M))/2, where M is the number of points. But for M=8, this would be (sin^2(π/8))/2.

But without knowing M, perhaps we can't proceed that way. Alternatively, perhaps the problem assumes that the phase shift is the same for both systems, so P_e for both is (1 - cos(phi))/2 = (1 - cos(theta))/2 → phi = theta.

But again, the options don't have the same theta as the options. So I'm getting a bit stuck.

Wait, perhaps the question expects that the phase shift phi for PSK is the same as the phase shift theta for DC, but given that the options are all different, perhaps the intended approach is different.

Wait, another angle: perhaps the formula for DC is (1 - cos(theta)) * (1/2), and for PSK it's (1 - cos(theta)) / 2. So the same. So setting them equal leads to the same equation, which we tried before.

Wait, but in that case, as before, phi = theta, but the options don't have the same value. So perhaps the formula is different.

Wait, maybe the formula for DC is 1 - cos(theta), and PSK is 1 - cos(theta) * (something else). Alternatively, perhaps I should think in terms of the bit error rate formula.

Wait, another approach: let me compute what phi would make (1 - cos(phi)) = 2 * 1e-5.

So 1 - cos(phi) = 2e-5 → cos(phi) = 1 - 2e-5 = 0.99998.

So, phi = arccos(0.99998) radians. Let me compute that.

Wait, 0.99998 is very close to 1. The arccos of 0.99998 is a small angle. Let me compute it in degrees.

Wait, I can compute this using small angle approximation. If cos(theta) ≈ 1 - theta^2/2, then theta ≈ sqrt(2*(1 - cos(theta))).

So theta ≈ sqrt(2*(2e-5)) ) = sqrt(4e-5) = 0.00632456 radians.

Convert that to degrees: 0.00632456 * (180/pi) ≈ 0.362 degrees.

Wait, but that's way smaller than the options. The closest option below is option F: 15 degrees. But our calculation gives about 0.36 degrees, which is not among the options. So perhaps I'm doing something wrong.

Wait, maybe the formula for the DC keying is (1 - cos(theta))/2. So setting that equal to 1e-5:

(1 - cos(theta))/2 = 1e-5 → 1 - cos(theta) = 2e-5 → cos(theta) = 0.99998.

So theta ≈ 0.362 degrees. But this isn't one of the options.

Hmm, but the options are all larger than that, so perhaps I made a mistake in the formula.

Wait, another thought: perhaps the DC keying's formula is P_e = (1 - cos(theta)) * (1/2), which is what I thought before. So for the same P_e, the phi would have to be the same as theta.

But the options don't have the same theta, so perhaps the question intended that the formula for the DC keying is different.

Alternatively, perhaps I've confused the formulas. Let me think again.

Wait, perhaps the formula for DC keying is (1 - cos(theta)) multiplied by the number of bits, but that doesn't make sense because the error rate is per bit.

Wait, perhaps the formula for the DC keying is (1 - cos(theta)) * (1/2). So that's what I thought before.

Alternatively, perhaps the formula for DC is (1 - cos(theta)) * (1/2), and PSK's formula is (1 - cos(phi)) * (1/2). So again, phi and theta must be equal.

But that leads us back to the same conclusion.

Wait, perhaps the question actually requires the same formula but in a different form. Alternatively, maybe the formula I should use is:

P_e = (1/2) * (1 - cos(2 * theta)), where theta is the phase shift in radians.

Wait, so for PSK, (1/2) * (1 - cos(2 * phi)), since phi is the phase shift.

So setting that equal to 1e-5:

(1/2) (1 - cos(2 * phi)) = 1e-5

→ 1 - cos(2 * phi) = 2e-5

→ cos(2 * phi) = 1 - 2e-5 = 0.99998

→ 2 * phi = arccos(0.99998) radians.

As before, 0.99998 is very close to 1, so 2*phi ≈ 0.00632456 → phi ≈ 0.003162 radians.

Converting to degrees: 0.003162 * (180/pi) ≈ 0.182 degrees.

Wait, but that's even smaller, so not matching any options.

Hmm. I'm getting stuck because the calculations don't align with the options. Perhaps I need to look for another approach.

Wait, another approach: perhaps the formula for the DC keying system is (1 - cos(theta))/2, and for the PSK system, it's (1 - cos(theta)) * (1/2), same as DC. So again, no help.

Alternatively, perhaps the formula for the DC system is (1 - cos(theta)) multiplied by M, but that doesn't make sense for P_e.

Alternatively, perhaps the formula for the DC system is (1 - cos(theta)) multiplied by some factor, but I'm not sure.

Wait, perhaps I should think of the DC system's formula as (1 - cos(theta)) / 2. So, solving for theta:

(1 - cos(theta)) / 2 = 1e-5 → 1 - cos(theta) = 2e-5 → cos(theta) = 0.99998 → theta ≈ 0.36 degrees.

Which again doesn't match the options.

Hmm, perhaps the formula for the DC keying system is different. Let me think again: for DC keying, each bit is separated by a phase shift theta, so the error occurs when the received phase is in the middle between two adjacent bins. So the probability is (1 - cos(theta)) / 2.

So, if I set (1 - cos(theta)) / 2 = 1e-5 → 1 - cos(theta) = 2e-5 → cos(theta) = 0.99998 → theta ≈ 0.36 degrees.

But the options provided are much larger than that. So perhaps the formula isn't the same.

Wait, perhaps the formula for DC is (1 - cos(theta)), and for PSK, it's (1 - cos(theta)) * (something else). Alternatively, perhaps the formula for DC is (1 - cos(theta)) * (M/2), but that doesn't make sense.

Alternatively, perhaps the formula for DC is (1 - cos(theta)) multiplied by the number of bits, but that again doesn't make sense for P_e.

Hmm, perhaps I'm missing a key point. Let me think: perhaps the formula for DC is (1 - cos(theta)) * (1/2), and for PSK, it's (1 - cos(phi)) * (1/2), so setting them equal would give phi = theta.

But again, the options don't have the same theta as the options. So perhaps I'm approaching this wrong.

Wait, perhaps the problem is in the direction of the phase shift. For instance, perhaps the formula is (1 - cos(pi - phi)), which is the same as (1 - cos(phi)), because cos(pi - phi) = -cos(phi).

So, that doesn't change the result.

Hmm, perhaps I should consider that the formula for DC keying is P_e = (1 - cos(theta)) * (1 - 2 sin(theta/2)^2) ), but that's getting too complicated.

Alternatively, perhaps the formula for PSK is (1 - cos(phi)) / 2, and for DC it's (1 - cos(theta)) / 2. So setting them equal would require phi = theta.

But the options don't have the same theta, so perhaps the question intended that the phase shift phi is the same for both systems, but for some reason, the options are different.

Wait, perhaps I should think of the formula for PSK in terms of the number of bits. Wait, perhaps the formula is P_e = (1 - cos(2π/N)) / 2, where N is the number of points. But without knowing N, perhaps that's not helpful.

Alternatively, perhaps the formula for DC keying is (1 - cos(theta)) * (1/2), and for PSK, it's (1 - cos(theta)) * (something else). But without knowing the formula, perhaps that's not helpful.

Wait, another approach: perhaps the formula for DC keying is (1 - cos(theta)) * (M/2), but I don't think that's correct.

Hmm, perhaps I need to look for an alternative approach. Let me think: perhaps the formula for the DC system is P_e = (1 - cos(theta)) * (1/2), and the PSK formula is P_e = (1 - cos(phi)) * (1/2). So, setting them equal again, phi equals theta.

But the options don't have the same theta as the options. So perhaps the question is expecting the answer to be phi = theta, but the options are different.

Hmm, perhaps I'm missing a key point. Let me think again.

Wait, perhaps the formula for DC keying is P_e = (1 - cos(theta)) * (M/2), but that doesn't make sense.

Alternatively, perhaps the formula for DC keying is P_e = (1 - cos(theta)) * (1/2), so that would be the same as the PSK formula.

Hmm, perhaps I'm stuck. Let me try to think of what the phase shift would be for a given P_e.

So, for the DC keying, P_e = (1 - cos(theta)) / 2 = 1e-5 → 1 - cos(theta) = 2e-5 → cos(theta) = 0.99998 → theta ≈ 0.36 degrees.

For the PSK keying, P_e = (1 - cos(phi)) / 2 = 1e-5 → same as above.

But the options are all higher, so perhaps I made a mistake.

Wait, perhaps the formula for the DC keying is (1 - cos(theta)) / M, where M is the number of points. But without knowing M, perhaps that's not helpful.

Alternatively, perhaps the formula for DC keying is (1 - cos(theta)) * (1/2), same as PSK.

Wait, perhaps the correct formula for DC keying is P_e = (1 - cos(theta)) / 2, same as PSK.

So, P_e = (1 - cos(phi)) / 2 = (1 - cos(theta)) / 2 → phi = theta.

But the options don't have the same theta as the options.

Hmm, perhaps the question intended that the phase shift phi for PSK is the same as the phase shift theta for DC, but the options are different.

Wait, perhaps I should compute the phase shift phi for a given P_e and see which option matches.

For example, let's compute for P_e = 1e-5, what phi would be.

(1 - cos(phi)) / 2 = 1e-5 → 1 - cos(phi) = 2e-5 → cos(phi) = 0.99998 → phi ≈ 0.36 degrees.

Looking at the options:

A: 0 degrees → cos(0) = 1 → 1 - 1 = 0 → 0.0000 → 0.00002 → for P_e=1e-5, this is 0.00001.

Wait, no, wait. If phi is 0 degrees, then cos(phi) is 1, so 1 - cos(phi) = 0. So P_e would be 0.

If phi is 180 degrees, cos(phi) is -1, so 1 - (-1) = 2 → P_e would be 2e-5.

Wait, but for phi=36 degrees, cos(phi)=0.8090, so 1 - 0.8090 = 0.191, divided by 2 is 0.0955, which is larger than 1e-5.

Wait, but for 0.36 degrees, cos(phi) is 0.99998, so 1 - 0.99998 = 0.00002, divided by 2 is 1e-5.

So for P_e=1e-5, the phase shift phi is approximately 0.36 degrees.

Looking at the options, option A is 0 degrees, which gives P_e=0.00001.

Option B is 180 degrees, which gives P_e=2e-5.

Option C is 90 degrees, gives P_e= (1 - 0) / 2 = 0.5e-5 = 0.000005.

Option D is 0 degrees, same as option A.

Option E is 270 degrees, but that's the same as 90 degrees, since 270 is 90 degrees in the other direction, but cos(270) = 0.

Wait, but for 0 degrees, P_e=0.00001.

Wait, but the question says P_e(PSK)=P_e(DC)=1e-5.

So, the correct phase shift for DC keying is approximately 0.36 degrees.

But looking at the options, option A is 0 degrees, which gives P_e=0.00001, which is 1e-5.

Wait, that's correct. So, for DC keying, the phase shift is 0 degrees, giving P_e=1e-5.

Similarly, for PSK, the phase shift is also 0 degrees, giving P_e=1e-5.

Hmm, so that would imply that the correct phase shift is 0 degrees, which is option A.

But wait, in that case, setting phi=0 for both systems would give P_e=1e-5.

So, the answer should be option A: 0 degrees.

Wait, but why would the phase shift be the same for both? That seems odd, but perhaps it's correct.

Hmm, perhaps the confusion is that the DC keying system requires a phase shift of 0 degrees, but wait, no, that's not correct. Because with a phase shift of 0 degrees, the error rate is higher.

Wait, I'm getting a bit stuck. Let me try to think of the formula again.

For DC keying, the P_e is (1 - cos(theta)) / 2.

So, for theta = 0 degrees, cos(theta) = 1 → P_e=0.

Hmm, but in that case, for theta=0 degrees, P_e=0.

But in the problem statement, P_e=1e-5.

So, for DC keying, I need to find theta such that (1 - cos(theta))/2 = 1e-5 → 1 - cos(theta) = 2e-5 → cos(theta) = 0.99998 → theta≈0.36 degrees.

Looking at the options, option A is 0 degrees, which gives P_e=0.00001, which is 1e-5.

But that's for DC keying.

Wait, but the question is about phase shift for PSK. So, perhaps for PSK, the phase shift is 0 degrees, same as DC keying, leading to P_e=1e-5.

Alternatively, perhaps the phase shift for PSK is 0 degrees, and DC keying is 0 degrees, leading to the same P_e.

Hmm, but that seems a bit odd. So, the answer would be option A: 0 degrees.

Alternatively, perhaps I should consider that the DC keying requires a phase shift of 0 degrees, so that P_e=1e-5.

Similarly, the PSK keying requires a phase shift of 0 degrees, leading to P_e=1e-5.

So, the correct phase shift is 0 degrees, which is option A.

Hmm, but I'm not entirely confident. Alternatively, perhaps I should think that the phase shift for DC keying is 0 degrees, which gives P_e=0.00001, which is 1e-5.

But then for PSK, the phase shift would have to be 0 degrees as well, leading to the same P_e.

Hmm, I think I've confused myself enough. I'll go with option A: 0 degrees.
</think>

To determine the phase shift required for both the Direct Current Keying (DC) and Phase Shift Keying (PSK) systems to achieve a bit error rate (P_e) of \(10^{-5}\), we analyze the formulas for P_e in each system.

### DC Keying System:
The bit error rate for DC keying is given by:
\[
P_e = \frac{1 - \cos(\theta)}{2}
\]
Setting \(P_e = 10^{-5}\), we solve for \(\theta\):
\[
1 - \cos(\theta) = 2 \times 10^{-5} \implies \cos(\theta) = 1 - 2 \times 10^{-5} = 0.99998
\]
Using the approximation \(\cos(\theta) \approx 1 - \frac{\theta^2}{2}\) for small angles, we find:
\[
\theta \approx \sqrt{2 \times (1 - \cos(\theta))} = \sqrt{2 \times 2 \times 10^{-5}} \approx 0.00632456 \, \text{radians}
\]
Converting to degrees:
\[
\theta \approx 0.00632456 \times \frac{180}{\pi} \approx 0.36^\circ
\]
This is approximately \(0^\circ\) when rounded to the nearest whole number.

### PSK Keying System:
The bit error rate for PSK depends on the phase shift \(\phi\). Assuming the formula is similar to DC keying:
\[
P_e = \frac{1 - \cos(\phi)}{2}
\]
To achieve \(P_e = 10^{-5}\), the same calculation as above applies, leading to:
\[
\phi \approx 0.36^\circ \approx 0^\circ
\]

### Conclusion:
Both systems achieve the desired P_e of \(10^{-5}\) when the phase shift is approximately \(0^\circ\). Thus, the correct answer is:

ANSWER: A