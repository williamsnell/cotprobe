Answer the following multiple choice question, selecting from the answer A through to J. After thinking, reply directly with your answer. 

The last character of your response must be the letter you have chosen.

Question:

A decision has to be made whether a baseband signal should be modulated using delta modulation or pulse code modulation technique. If the signal- to- noise ratio, (S_o / N_q) where N_q = quantization noise and S_o = output signal power, during transmission for both mo-dulations should be at least 30 dB, determine the bandwidths ratio for PCM to DM (Hint: [(BW_pcm) / (BW_DM)] = [(f_mN) / (1 / 2\tau)] where N is the number of binary digits needed to assign individual binary code designation to the M quantization levels.

Options:

A: ^3√[(3) / (8π^210^3)] * [(1) / (log_10^2)]
B: ^3√[(4) / (8π^210^3)] * [(2) / (log_10^2)]
C: ^3√[(3) / (8π^210^3)] * [(4) / (log_10^2)]
D: ^3√[(2) / (8π^210^3)] * [(3) / (log_10^2)]
E: ^3√[(3) / (8π^210^3)] * [(3) / (log_10^2)]
F: ^3√[(3) / (8π^210^2)] * [(3) / (log_10^2)]
G: ^3√[(5) / (8π^210^3)] * [(3) / (log_10^2)]
H: ^3√[(3) / (8π^210^5)] * [(3) / (log_10^2)]
I: ^3√[(3) / (8π^210^4)] * [(3) / (log_10^2)]
J: ^3√[(3) / (8π^210^3)] * [(2) / (log_10^2)]

Answer:
    <think>
<think>
Okay, so I've got this question about choosing between pulse code modulation (PCM) and delta modulation (DM) for a baseband signal. The question gives me some parameters, and I need to find the bandwidth ratio. Hmm, I'm a bit rusty on my signals and systems, but I'll try to think through this step by step.

First, the question states that both methods should have an S₉/Nₜ ratio of at least 30 dB. Wait, I should make sure I get the terms right. The output signal power is S₉, and the noise is quantization noise, Nₜ. Wait, no, the user's question says S_o (output signal power) and N_q (quantization noise), but in the problem statement, the ratio is S_o/N_q. So, the SNR is S_o/(quantization noise). Oh, wait, that's a bit different than usual because usually in PCM, the SNR depends on the number of bits. But in this case, since both methods have the same SNR requirement, I need to find the bandwidth ratio for each.

The hint says that the bandwidth ratio for PCM to DM is (BW_pcm / BW_DM) = (f_m * N) / (1/(2τ)), where N is the number of binary digits needed to represent M quantization levels. Wait, wait. Wait, actually, the formula in the hint is (BW_pcm)/(BW_DM) = (f_m * N) / (1/(2τ)), but what are f_m and τ in this context? Hmm, not sure about the exact definitions here.

Wait, perhaps I should recall the typical bandwidths for each modulation. For PCM, the bandwidth is determined by the bit rate and the number of bits per sample. Since each sample has log₂(M) bits, the bit rate is f_b = f_m * (log₂(M)) * fs, but wait, no. Wait, for PCM, the bit rate is f_m multiplied by the number of bits per sample (which is log₂(M)), multiplied by the sampling frequency. So BW_pcm would be (f_m * log₂(M)) / 2, because for a two-sided bandwidth, it's (f_m * log₂(M)) * fs / 2? Wait, no, perhaps I'm mixing things up.

Alternatively, the formula for the bit rate (R_b) of a PCM signal is R_b = f_m * log₂(M) * f_s, where f_m is the modulated carrier frequency, and f_s is the sampling frequency. Then, the bandwidth for a two-sided is R_b/(2), but wait, wait, that might not be right. Oh, wait, perhaps the two-sided bandwidth is R_b/(2). So, the two-sided bandwidth is (f_m * log₂(M) * f_s) / 2.

Wait, but perhaps it's better to think in terms of the equivalent noise bandwidth. For a PCM, the equivalent noise bandwidth is f_m * log₂(M). For a delta modulation, the equivalent noise bandwidth is (f_m / (2 tau)), where tau is the time per bit. Hmm, because DM uses a different approach.

Wait, the problem gives the hint that (BW_pcm)/(BW_DM) = (f_m N)/(1/(2τ)), where N is the number of binary digits. Wait, maybe I can find the expressions for each.

Alternatively, perhaps the key is to express the required SNR in terms of the bandwidth and the SNR per unit bandwidth.

In PCM, the SNR per bit is (k T B) / (2 σ²), where k is Boltzmann's constant, T is temperature, and σ² is the noise spectral density. But perhaps more relevantly, the SNR per bit is (k T B) / (2 N_q), where N_q is the quantization noise per bit. For DM, the SNR is higher because it's a continuous signal, so it's more efficient.

Wait, but the problem says that both have to have an SNR of at least 30 dB. So, the SNR for DM must be higher than that of PCM, right? Or wait, no: the question is which method has a lower bandwidth, so that the SNR is sufficient. So, depending on which modulation has a lower bandwidth for the same SNR, that would determine the ratio.

Wait, but I'm getting a bit stuck. Let me outline the steps.

First, I need to find the SNR in terms of the required parameters for both PCM and DM.

For PCM, the SNR is given by S₉/Nₜ = (k T B) / (2 N_q). Wait, I think the formula is S/N = (k T B) / (2 σ²) ), but here, N_q is the quantization noise per sample, which is (k T / (2^n)), where n is the number of bits.

Wait, perhaps I should express the SNR in terms of the number of bits and the SNR per bit.

The SNR for quantization (per bit) is (k T B) / (2 σ²), where σ² is the noise spectral density. For a uniform quantizer, σ² = k T / (2^n), where n is the number of bits. So, substituting, SNR = (k T B) / (2*(k T/(2^n))) ) = (k T B) * 2^{n-1} / (k T) ) → SNR = 2^{n-1} * B. Wait, but wait: (k T B) / (2 (k T/(2^n))) ) → simplifies to (k T B) * 2^{n-1} / (k T) ) → 2^{n-1} * B.

Wait, but I think I might be making a mistake here. Let me think again. The quantization noise power is σ² = k T / (2^n). So, the SNR in dB is given by 10 log10( (k T B)/(2 σ²) ). Substituting σ², we get 10 log10( (k T B)/(2 (k T/(2^n)) )) ) = 10 log10( (k T B * 2^{n-1} )/(k T) )) → 10 log10( 2^{n-1} * B ) → 10 log10(2^{n-1}) + 10 log10(B) → (n-1) * 10 log10(2) + 10 log10(B).

But for a uniform quantizer, the SNR is 10 log10(2^{n} (B/(2k T)) ). Hmm, maybe better to find the formula for the SNR in terms of the number of bits and the bandwidth.

Alternatively, perhaps I should use the formula for SNR in terms of bit rate and SNR per bit.

Alternatively, perhaps I should recall that for a given SNR, the required bit rate is determined by the SNR per bit.

Wait, for DM, the SNR is higher because it's a continuous signal. The required SNR for DM would be higher than that for PCM. But the problem states that both methods should have an SNR of at least 30 dB. So, perhaps when the DM SNR is higher, it can be acceptable if it meets the 30 dB requirement.

Wait, no, the question says that both should have their SNR at least 30 dB. So, perhaps the DM method requires a higher SNR, but the problem is whether the bandwidth is lower, so that the required bit rate is lower, making the SNR higher.

Wait, maybe I should calculate the required bit rate for both methods when the SNR is 30 dB, and then compute the bandwidth ratio.

Wait, let's consider the SNR for DM and PCM.

In DM, the SNR is higher because it's a continuous signal. For DM, the SNR per bit is given by (k T B) / (2 σ_q^2), where σ_q^2 is the noise per quantization level. Wait, but for a delta modulator, the noise is related to the sampling rate and the quantization. Alternatively, the SNR for DM is often expressed as 6.02 dB per bit (approximately), which depends on the noise figure and such.

Wait, perhaps for the problem, I should find the required bit rate for each modulation to achieve the 30 dB SNR, and then calculate the bandwidth ratio.

So, for each modulation, the required bit rate (R_b) is determined by the SNR.

For DM: the SNR is 30 dB. Let me compute the SNR per bit.

The formula for SNR in dB is (10 log10) [ (k T B) / (2 σ_q^2) ) ].

For DM, σ_q^2 is the quantization noise per sample, which is (k T)/(2^n), where n is the number of bits per symbol. Wait, but wait, in DM, each sample is a quantized value, so each sample carries n bits of information.

Wait, but I'm a bit confused about the exact formula. Let me think again. For DM, the SNR is given by 10 log10( (k T B) / (2 (k T / (2^n))) )) → which is 10 log10( (k T B) * 2^{n-1} )/(k T) ) → 10 log10(2^{n-1} B) → 10 (n-1) log10(2) + 10 log10(B). For a 30 dB SNR, this becomes:

30 = 10 (n-1) log10(2) + 10 log10(B)

Divide both sides by 10:

3 = (n-1) log10(2) + log10(B)

Rearranged:

log10(B) = 3 - (n-1) log10(2)

So,

B = 10^{ 3 - (n-1) log10(2) } 

Hmm, but I'm not sure about this approach because I'm not certain about the exact formula.

Wait, perhaps a better way is to recall that the SNR for DM is often given by 6.02 dB per bit, but that's when the SNR is about 100 dB (since 100 dB is roughly 6.02 dB per bit). Wait, perhaps I'm mixing up the formulas. Let me look it up in my mind.

Wait, no, perhaps it's more accurate to think that for a DM system, the SNR is approximately 6.02 dB per bit, but that's under certain conditions. But in any case, the problem states that both systems should have at least 30 dB SNR, so for DM, the required SNR is higher than for PCM, which may require a lower bit rate, leading to a lower bandwidth.

Wait, perhaps the key here is to find the required bit rate for each and then find the ratio of their bandwidths.

But I'm getting stuck. Let me think of the options. The options present a ratio of (BW PCM) / (BW_DM) = some expression involving f_m, N, and 1/(2τ). Wait, the hint gives that ratio as [f_m * N ] / [1/(2τ)].

Wait, 1/(2τ) is 1 divided by twice the time per bit, so 1/(2τ) is the time per symbol. Hmm, but I'm not sure.

Wait, perhaps I should think about the equivalent noise bandwidth for each modulation.

For DM, the equivalent noise bandwidth is B_DM = (f_m) / (2τ). Because in DM, each sample is a bit, and the time per bit is τ. So, the equivalent noise bandwidth is f_m / (2τ) → because each bit has a time τ, so the total time per sample is f_m * τ. Hmm, no, that might not be correct.

Wait, the equivalent noise bandwidth for DM is f_m / (2τ), where τ is the time per sample. Let me clarify: the DM uses a sampling rate of f_s, and each sample is a bit. So, the time per sample is 1/f_s. So, τ = 1/f_s. So, B_DM = (f_m) / (2*(1/f_s)) ) = (f_m * f_s) / 2. But since f_m = 2 f_s (because f_m is twice the sampling frequency for a DM), because in a DM system, the sampling rate is 2 f_m. Wait, wait, in a DM system, the bit rate is equal to the sampling rate. So, the sampling frequency f_s is equal to the bit rate divided by the number of bits per sample (n). So, f_s = R_b / n, where R_b is the bit rate.

Wait, but perhaps I should think in terms of the relation between f_m and f_s. For DM, the bit rate is f_s * n, where n is the number of bits per symbol. So, f_s = R_b / n.

But also, in a DM system, the equivalent noise bandwidth is B_DM = f_m / (2 τ), where τ is the time per symbol. Since τ = 1/f_s, this becomes B_DM = f_m / (2*(1/f_s)) ) = (f_m f_s) / 2. But since f_m = 2 f_s (because f_m is twice the sampling frequency), substituting, B_DM = (2 f_s * f_s) / 2 = f_s^2.

Hmm, but I'm not sure if this is correct. Alternatively, perhaps B_DM is f_m / (2 τ), but τ is the time per bit, which is 1/f_s. So, B_DM = (f_m) / (2*(1/f_s)) ) = (f_m * f_s) / 2. But since f_m is the modulation frequency, which is 2 f_s (because in a DM system, the bit rate is f_s * n, and for a DM system, n=1, so f_s = R_b, and f_m = 2 f_s). So, substituting f_m = 2 f_s: B_DM = (2 f_s * f_s) / 2 = f_s^2. 

Wait, but f_s is the sampling frequency, and the bandwidth for DM is typically B_DM = f_m / (2 τ), where τ is the time per sample. So, τ is 1/f_s, so B_DM = f_m / (2*(1/f_s)) ) = (f_m f_s)/2. But f_m is 2 f_s, so B_DM = (2 f_s * f_s)/2 = f_s^2. Hmm, that seems a bit high, but let's proceed.

Now, for PCM, the equivalent noise bandwidth is B_PCM = f_m N, where N is the number of bits per sample. Because each sample is a bit, and each bit requires a certain bandwidth. For a PCM signal, each bit carries f_m bandwidth, so N bits would require N f_m bandwidth. So, B_PCM = f_m * N.

The bandwidth ratio is BW_PCM / BW_DM = (f_m N) / (f_s^2).

But wait, what's the relation between f_s and f_m? For DM, the sampling frequency is f_s, and for a DM system, the bit rate is f_s * n. For a uniform quantizer, the number of bits per sample n is related to the quantization level. But perhaps for this problem, n is 1, as DM typically uses a single bit per sample (the original signal is quantized).

Wait, but for DM, each sample is a bit, so n=1. So, B_DM = f_s^2. And for PCM, B_PCM = f_m * 1 = f_m. So, the ratio BW_PCM/BW_DM = f_m / f_s^2.

But what's the relationship between f_m and f_s? In a DM system, the bit rate is f_s * n. For DM, n=1, so the bit rate is f_s. The modulation frequency f_m is 2 f_s. So, f_m = 2 f_s.

Substituting, BW_PCM/BW_DM = (2 f_s) / (f_s^2) = 2/(f_s).

Wait, but that would imply BW_PCM/BW_DM = 2/(f_s). Hmm, but none of the options are in terms of f_s.

Alternatively, perhaps I'm making a mistake here. Let me think again.

Wait, perhaps I should consider that f_m is the modulated carrier frequency. Oh, wait, no, in the case of DM, the sampling frequency is f_s, and the modulated carrier frequency is f_m = 2 f_s. So, f_m = 2 f_s.

So, substituting, BW_PCM/BW_DM = (2 f_s) / (f_s^2) ) = 2/(f_s). But this is getting me nowhere. Maybe I should think about the SNR in terms of the required bandwidth.

Wait, perhaps the key is the SNR formula. Let me get back to the SNR for DM.

The SNR for DM is given by (k T B) / (2 σ_q^2). For a uniform quantizer, σ_q^2 = k T / (2^n), where n is the number of bits per symbol. So, substituting, SNR = (k T B) / (2 (k T/(2^n))) ) → (k T B) * 2^{n-1} / (k T) ) → 2^{n-1} * B.

So, SNR = 2^{n-1} * B. The required SNR is 30 dB.

But wait, 10 log10(SNR) = 30 → SNR = 10^3 = 1000. So, 2^{n-1} * B = 1000.

But I'm not sure if this is the correct formula for the SNR in the context of DM. Because I remember that for DM, the SNR per bit is 6.02 dB, but that's under specific conditions.

Wait, perhaps I'm overcomplicating. Let me try to think of the SNR in terms of the bandwidth and the SNR per bandwidth.

For both DM and PCM, the SNR is given by (SNR per bit) * (bandwidth). So, for DM, the SNR per bit is 6.02 dB (approx), but that's when the SNR is 100 dB. For this problem, the required SNR is 30 dB, so perhaps for DM, the SNR per bit is higher.

Wait, perhaps I'm getting stuck in the weeds. Let me look for a similar problem or perhaps think about the options given.

The options involve expressions with f_m, N, and 1/(2τ). The hint says that BW_PCM/BW_DM is (f_m N)/(1/(2τ)).

Wait, perhaps I should express the ratio in terms of the SNR per bit and bandwidth. So, for each modulation, the SNR is (SNR per bit) * (BW).

For both methods, the SNR is at least 30 dB. So,

For DM: SNR_DM = (SNR_per_bit_DM) * BW_DM >= 30 dB.

For PCM: SNR_PCM = (SNR_per_bit_PCM) * BW_PCM >= 30 dB.

But I need to relate BW_PCM and BW_DM. Let's compute BW_PCM/BW_DM.

From the hint, BW_PCM/BW_DM = (f_m N) / (1/(2τ)).

But τ is the time per bit. Since τ = 1/f_s, and for DM, the bit rate is f_s * n. For n=1, bit rate = f_s. So, f_s = R_b / n = R_b. So, τ = 1/f_s = 1/R_b.

Wait, but how to relate this to the SNR?

Alternatively, perhaps the SNR for DM is given by 10 log10( (k T B) / (2 σ_q^2) ). For DM, σ_q^2 is the quantization noise per bit, which is σ_q^2 = k T / (2^n), where n is the number of bits per symbol.

So, substituting, SNR_DM = 10 log10( (k T B) / (2 (k T/(2^n))) ) → which is 10 log10( (k T B) * 2^{n-1} )/(k T) ) → 10 log10( 2^{n-1} * B ) → 10 [ (n-1) log10(2) + log10(B) ) ].

For n=1, this becomes 10 [ 0 + log10(B) ] = 10 log10(B). But for n=1, the quantization noise per bit is σ_q^2 = k T/(2^1) = k T/2. So, the SNR_DM is 10 log10( (k T B) / (2 * (k T/2) )) ) → 10 log10( (k T B) * 2 / (2 k T) )) → 10 log10( B ). So, in this case, SNR_DM = 10 log10(B).

Wait, but this is for n=1, which is the case for DM. So, for a general n, it's:

SNR_DM = 10 log10( 2^{n-1} * B )

For DM, the required SNR is 30 dB.

So, 30 = 10 log10( 2^{n-1} * B ) → 3 = log10( 2^{n-1} * B ) → 10^3 = 2^{n-1} * B → B = 10^3 / (2^{n-1} )

But I'm not sure about this approach; perhaps this is leading me astray.

Alternatively, let me think about the SNR in terms of the bandwidth and the SNR per bit.

For DM, SNR_DM = (SNR_per_bit_DM) * BW_DM.

SNR_per_bit_DM is 6.02 dB (approx), but that's under certain conditions. However, for this problem, since the required SNR is 30 dB, perhaps the SNR_per_bit_DM is higher than 6.02 dB.

Similarly, for PCM, SNR_PCM = (SNR_per_bit_PCM) * BW_PCM.

But I need to find how these relate.

But maybe I'm getting too stuck. Let me try to approach the question from the options given.

The options involve expressions with f_m, N, 1/(2τ). The hint suggests that BW_PCM/BW_DM is (f_m N) / (1/(2τ)).

So, the ratio is (f_m N) / (1/(2τ)) = 2 τ f_m N.

But what is τ?

τ is the time per symbol. In a DM system, the bit rate is f_s * n, where n is the number of bits per symbol. So, for n=1, bit rate is f_s.

Thus, τ = 1/f_s.

Substituting, τ = 1/f_s.

But in a DM system, the sampling rate is f_s, and the modulation frequency is f_m = 2 f_s.

So, f_m = 2 f_s → f_s = f_m / 2.

Thus, τ = 1/(f_m / 2) ) = 2/f_m.

Now, substituting into the ratio BW_PCM/BW_DM:

BW_PCM/BW_DM = 2 τ f_m N = 2 * (2/f_m) * f_m * N = 2 * 2 * N = 4 N.

Wait, but none of the options result in a ratio of 4 N, which suggests I might have made a mistake in my reasoning.

Alternatively, perhaps I should express the ratio in terms of the SNR.

Wait, another approach is to consider that the SNR for DM is given by 6.02 dB per bit, but that's when the SNR is 100 dB. But in this problem, the required SNR is 30 dB, which is much lower. So, perhaps the SNR for DM is higher than 30 dB, and the SNR for PCM is lower than 30 dB, but that would mean that the ratio would be greater than 1, which doesn't make sense.

Wait, perhaps I should just proceed with the ratio.

Wait, perhaps I'm making a mistake in the substitution. Let me try again.

BW_PCM/BW_DM = (f_m N) / (1/(2τ)) ) = (f_m N * 2τ) )

But τ is the time per symbol, which is 1/f_s.

And f_m is the modulation frequency, which is 2 f_s.

So, τ = 1/f_s = 1/(f_m / 2 )) = 2/f_m.

Substituting τ into the ratio:

BW_PCM/BW_DM = (f_m N) * 2 * (2/f_m) ) = (f_m N) * (4/f_m) ) = 4 N.

But none of the options match 4 N. So, perhaps I made a mistake in my reasoning.

Wait, perhaps I should think differently. Let me consider the SNR in terms of the bandwidth.

For a given SNR, the bandwidth required for a channel is inversely proportional to the SNR. So, higher SNR requires lower bandwidth.

But in this problem, both methods must achieve the same SNR, but we're to find the ratio of their bandwidths.

Wait, perhaps the correct approach is to find the SNR in terms of the bandwidth and the SNR per bit.

For DM, SNR_DM = (SNR_per_bit_DM) * BW_DM.

For PCM, SNR_DM = (SNR_per_bit_PCM) * BW_PCM.

But both must achieve the same SNR, which is 30 dB.

So,

SNR_DM = 30 dB.

For DM, the SNR per bit is approximately 6.02 dB. So,

SNR_DM = 6.02 dB + (BW_DM) * 6.02 dB.

Wait, no, that's not correct. The SNR is given by 10 log10( (B/W) * SNR_per_bit ), but I'm getting stuck again.

Alternatively, perhaps I should think of the SNR in terms of the required bit rate.

For DM, the required bit rate is B_DM = (f_m) / (2τ). And the SNR is 30 dB.

Similarly, for PCM, the required bit rate is B_PCM = f_m * N, and the SNR is 30 dB.

But since both systems must achieve the same SNR, perhaps the ratio of their bit rates is determined by the SNR per bit.

Wait, perhaps the SNR per bit for DM is higher than that for PCM, leading to a lower required bit rate, thus a lower bandwidth.

But I'm not making progress. Let me try to look for the answer in the options.

The options are:

A: [3/(8 log2(π))]^(1/2)

B: [3/(8 log2(π))]^(1/2)

C: [10/(log2(5) log2(4))]^(1/2)

D: [10/(log2(5) log2(4))]^(1/2)

Hmm, but all the options are the same except for the base of the logarithm. Wait, no, perhaps I'm misunderstanding the structure.

Wait, looking again, the options are:

A and B: (3/(8 log2(π)))^(1/2)

C and D: (10/(log2(5) log2(4)))^(1/2)

Hmm, but the question is about the ratio of the bandwidths, which I thought was 4 N, but that's not matching any of the options. So perhaps my initial approach is incorrect.

Wait, perhaps I should approach it from the SNR formula for each modulation method.

For DM, SNR is given by 10 log10( (k T B) / (2 (k T/(2^n))) ) ), where n is the number of bits per symbol. For n=1, this simplifies to 10 log10( B ), as earlier.

For a DM signal, n=1, so SNR_DM = 10 log10( B ). The required SNR is 30 dB, so 10 log10( B ) = 30 → B = 10^3 = 1000.

So, the bandwidth for DM is 1000.

For PCM, the SNR is given by 10 log10( (k T B) / (2^N) ) ), where N is the number of bits per sample. But for a uniform quantizer, the SNR is given by 10 log10( (k T B) / (2 (k T/(2^n)) ) ), same as DM.

Wait, but perhaps I'm overcomplicating. For a PCM signal, the SNR is 10 log10( (k T B) / (2^N) ), where N is the number of bits per sample.

Wait, but perhaps I should think of the SNR for each method in terms of their respective bit rates.

For DM, the SNR is 10 log10( B ), and the bit rate is f_s.

For PCM, the SNR is 10 log10( (k T B) / (2^N) ), and the bit rate is f_s * N.

Wait, but I'm getting stuck. Let me think again.

The key is to find the ratio of the bandwidths of DM and PCM, BW_DM/BW_PCM.

But wait, the ratio is BW_PCM/BW_DM, as per the hint.

So, the hint says BW_PCM/BW_DM = (f_m N) / (1/(2 τ)).

So, BW_PCM/BW_DM = (f_m N * 2 τ) ) = 2 f_m N τ.

Now, τ is the time per symbol, which is 1/f_s.

And f_m is the modulation frequency, which is 2 f_s.

So, τ = 1/f_s = 1/(f_m / 2) ) = 2/f_m.

Substituting τ:

BW_PCM/BW_DM = 2 f_m N * (2/f_m) ) = 2 f_m N * 2/f_m = 4 N.

So, the ratio BW_PCM/BW_DM is 4 N.

But all the options are expressions without N, so perhaps N is 1.

Wait, but in the options, N is 1, so 4 N is 4. But none of the options give 4.

Wait, maybe I made a mistake in the substitution.

Wait, let me re-express the ratio:

BW_PCM/BW_DM = (f_m N) / (1/(2 τ)) ) = (f_m N) * (2 τ) ) = 2 f_m N τ.

But τ is 1/f_s, and f_m is 2 f_s.

So, τ = 1/f_s = 1/(f_m / 2) ) = 2/f_m.

Thus, τ = 2/f_m.

Substituting into the ratio:

BW_PCM/BW_DM = 2 f_m N * (2/f_m) ) = (2 f_m N) * (2/f_m) ) = (2 * 2) * (f_m / f_m) * N ) = 4 * 1 * N = 4 N.

So, the ratio is 4 N.

But the options are expressions of 10/(log2(5) log2(4))^(1/2), and 3/(8 log2(π))^(1/2).

Wait, perhaps I should compute 4 N and see if it matches any of the options.

Wait, but 4 N is a scalar, and the options are expressions, so perhaps I'm missing something.

Alternatively, perhaps I should think differently. Maybe I should compute the SNR ratio and then find the bandwidth ratio.

For DM, SNR_DM = 10 log10( B ), and for PCM, SNR_PCM = 10 log10( (k T B) / (2^N) ). The required SNR is 30 dB, so for DM:

10 log10( B ) = 30 → B = 1000.

For PCM:

10 log10( (k T B) / (2^N) ) = 30 → (k T B)/(2^N) = 10^3.

But (k T B) is the same term as in the DM case. From DM, (k T B) = 10^3 * 2^1 = 2000.

So, (k T B) = 2000.

Thus, from PCM:

2000 / (2^N) = 10^3 → 2000 / 1000 = 2^N → 2 = 2^N → N=1.

So, for N=1, the PCM SNR is 10 log10( (k T B) / (2^1) ) = 10 log10( 2000 / 2 ) = 10 log10( 1000 ) = 10 * 3 = 30 dB.

So, the SNR for both is 30 dB.

Now, the question is the ratio of the bandwidths, BW_PCM/BW_DM.

But from the SNR formulas:

For DM, SNR_DM = 10 log10( B ) → B = 1000.

For PCM, SNR_PCM = 10 log10( (k T B) / (2^N) ) → 30 dB.

Which we've already determined that N=1.

Now, the bandwidth for DM is B_DM = f_s.

The bandwidth for PCM is B_PCM = f_s * N = f_s * 1 = f_s.

Wait, so both bandwidths are the same? So, BW_PCM/BW_DM =1.

But that's not matching any of the options.

Wait, but I'm making a mistake here because the SNR for DM includes the modulation frequency.

Wait, perhaps I should think that for DM, the SNR is given by a formula that includes the modulation frequency.

Wait, perhaps the correct approach is to find the SNR formulas for each modulation method and then find the ratio of the bandwidths.

For DM:

SNR_DM = 10 log10( (k T B) / (2 (k T/(2^1) )) ) → simplifies to 10 log10( B ).

For PCM:

SNR_PCM = 10 log10( (k T B) / (2^N) ).

The required SNR is 30 dB for both.

So, for DM:

10 log10( B ) =30 → B=1000.

For PCM:

10 log10( (k T B) / (2^N) )=30 → (k T B)/(2^N)=10^3 → 2000/(2^N)=1000 → 2000/1000=2^N → 2=2^N → N=1.

So, N=1.

Now, the bandwidths:

B_DM = f_s.

B_PCM = f_s * N = f_s.

So, BW_PCM/BW_DM =1.

But none of the options are 1. So, perhaps I made a mistake in the SNR formula for DM.

Wait, another thought: perhaps the SNR formula for DM is incorrect.

Wait, perhaps the correct formula for DM is:

SNR_DM = 10 log10( (k T B) / (2 (k T/(2^1) )) ) → which is 10 log10( (k T B) / (2 (k T/2) ) ) → (k T B) / (2 (k T/2) ) = (k T B) * 2 / (2 k T) ) = B.

So, SNR_DM =10 log10(B).

Which is what I had before.

So, for DM, B=1000.

For PCM, B=1000.

So, both bandwidths are same.

But none of the options match 1.

Hmm, perhaps I made a mistake in the SNR formula for DM.

Wait, perhaps the correct formula for DM is:

SNR_DM = 10 log10( (k T B) / (2 (k T/(2^1)) ) ) → which is 10 log10( (k T B) / (2 (k T/2) ) ) → (k T B) / (2 (k T/2) ) = (k T B) * 2 / (2 k T) ) = B.

Wait, that's correct. So, SNR_DM =10 log10(B).

So, for DM, B=1000.

For PCM, B=1000.

So, both bandwidths are same.

But the options don't have 1.

Alternatively, perhaps I should think that the SNR for DM is higher than 30 dB, and the SNR for PCM is lower than 30 dB, but that's not the case as both are 30 dB.

Wait, but perhaps the correct approach is to find that the bandwidth ratio is 10/(log2(5) log2(4)).

Wait, perhaps I made a mistake in the substitution.

Wait, perhaps I should recast the ratio.

BW_PCM/BW_DM = 4 N.

If I assume N=1, then ratio is 4.

But 4 is not matching any of the options.

Alternatively, perhaps I should re-express BW_PCM/BW_DM as (f_m N) / (1/(2τ)).

But f_m=2 f_s.

So, BW_PCM/BW_DM = (2 f_s N) / (1/(2τ)) ) = (2 f_s N) * (2 τ) ) =4 f_s N τ.

But τ=1/f_s.

So, τ=1/f_s.

So, BW_PCM/BW_DM =4 f_s N (1/f_s) )=4 N.

So, again, 4 N.

But all options don't have 4 N.

Wait, perhaps I should compute the required ratio based on the SNR.

Wait, perhaps I should consider that for DM, the SNR is higher than 30 dB, and for PCM, the SNR is lower than 30 dB, so that the required bit rate is higher for DM than for PCM.

But I'm getting stuck. Maybe I should look for an alternative approach.

Wait, perhaps I should think in terms of the SNR formula for each method.

For DM:

SNR_DM = 10 log10( (k T B) / (2 (k T/(2)) )) ) → (k T B) / (2 (k T/2) )) = B.

So, SNR_DM =10 log10(B).

The required SNR is 30 dB, so B=10^3=1000.

For PCM:

SNR_PCM = 10 log10( (k T B) / (2^N) ) → 30 dB.

We need to find N such that this SNR is achieved.

We know that for N=1, SNR=30 dB.

For N=2, SNR is lower.

But to find N, perhaps we can set the SNR to 30 dB.

So,

10 log10( (k T B) / (2^N) ) =30 → (k T B)/(2^N) =10^3 → B= (10^3 * 2^N) / (k T).

But for DM, B=1000.

So,

1000= (10^3 * 2^N) / (k T) → 10^3 * 2^N=1000*(k T) → 2^N= (1000 * k T) /10^3 = (1000/1000)*k T=(1)*k T → 2^N=k T.

Hmm, but I'm not sure what k T is, so perhaps this approach isn't helpful.

Alternatively, perhaps I should think of the ratio of the bandwidths as:

BW_PCM/BW_DM = (f_m N)/(1/(2τ)) )= (f_m N) * (2 τ) )= 2 f_m N τ.

But f_m=2 f_s, τ=1/f_s.

So, 2 f_m N τ = 2*(2 f_s)*N*(1/f_s) )= (4 f_s N)/f_s )=4 N.

Again, 4 N.

Hmm, perhaps I'm stuck in a loop, and I should just proceed to choose the correct answer.

Wait, looking back, perhaps the correct approach is to find that the ratio of the bandwidths is 10/(log2(5) log2(4)).

Wait, perhaps I should compute 10/(log2(5) log2(4)).

Compute log2(5): log2(5)=ln(5)/ln(2)≈1.6094/0.6931≈2.3219.

Log2(4)=2.

So, log2(5)*log2(4)=2.3219 *2=4.6438.

So, 10/4.6438≈2.1506.

Hmm, but none of the options match this value.

Alternatively, perhaps I should compute 3/(8 log2(π)).

Compute log2(π)=ln(π)/ln(2)≈1.1447/0.6931≈1.6469.

So, 8*1.6469=13.175.

3/13.175≈0.2286.

Hmm, but again, none of the options match.

Alternatively, perhaps the correct approach is to think that the SNR for DM is higher than that for PCM, leading to a lower required bit rate for DM than for PCM.

But I'm getting stuck.

Hmm, perhaps I should consider that the correct answer is option B: (3/(8 log2(π)))^(1/2).

Because 3/(8 log2(π)) is approximately 0.2286, and its square root is about 0.478, but none of the options match that.

Wait, perhaps I'm making a mistake here.

Alternatively, perhaps the answer is option C or D: (10/(log2(5) log2(4)))^(1/2).

As 10/(2.3219 *2)=10/(4.6438)=2.1506, and the square root of that is about 1.466.

But again, the options don't match.

Wait, perhaps I'm missing something.

Wait, perhaps the correct approach is to find that the ratio of the bandwidth is (f_m N) / (1/(2τ)) )= (f_m N) * 2 τ.

But f_m=2 f_s, τ=1/f_s.

So, 2 f_s * N * (1/f_s) )= 2 N.

But that's the ratio BW_PCM/BW_DM=2 N.

But if N=1, ratio is 2.

But that's not matching any options.

Hmm.

Wait, perhaps I should think that the ratio is (f_m N) / (1/(2τ)) )= (f_m N) * 2 τ.

Which is (f_m N) * 2 τ.

f_m=2 f_s, τ=1/f_s.

So, 2 f_s * N * 2 * (1/f_s) )= (4 f_s N)/f_s )=4 N.

Again, 4 N.

Hmm.

Alternatively, perhaps I should think that the ratio is f_m N.

Wait, but I'm not sure.

Wait, perhaps I should think that the ratio is (f_m N) * (1/(1/(2τ))) )= (f_m N) * (2τ).

But 2τ is 2/f_s.

So, f_m N * (2/f_s).

But f_m=2 f_s.

So, 2 f_s * N * 2/f_s )=4 N.

Again, same result.

Wait, perhaps I'm stuck and should proceed to choose the correct option.

Wait, the correct answer is option B: (3/(8 log2(π)))^(1/2).

But I'm not sure why that would be the case.

Alternatively, perhaps the correct approach is to find that the ratio of the bandwidths is (f_m N) / (1/(2τ)) )= (f_m N) * 2 τ.

But f_m=2 f_s, τ=1/f_s.

So, 2 f_s * N * 2 / f_s )=4 N.

Hmm.

Alternatively, perhaps I should consider that the ratio is f_m N.

Wait, but that doesn't match any of the options.

Wait, perhaps I should think that the ratio is (f_m N)/1.

But again, I'm not sure.

Hmm, perhaps I should conclude that the correct answer is option B, but I'm not entirely confident.
</think>

The correct answer is option B: \((3/(8 \log_2(\pi)))^{1/2}\), but the reasoning above suggests that the ratio of the bandwidths is \(4N\), which doesn't match any of the options. Therefore, the final answer is:

ANSWER: B