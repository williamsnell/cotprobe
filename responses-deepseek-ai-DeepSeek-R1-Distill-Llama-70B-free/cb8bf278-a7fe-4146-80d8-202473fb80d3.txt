Answer the following multiple choice question, selecting from the answer A through to J. After thinking, reply directly with your answer. 

The last character of your response must be the letter you have chosen.

Question:

Bob writes down a number between 1 and 1,000. Mary must identify that number by asking "yes/no" questions of Bob. Mary knows that Bob always tells the truth. If Mary uses an optimal strategy, then she will determine the answer at the end of exactly how many questions in the worst case?

Options:

A: 250
B: 20
C: 500
D: 100
E: 2
F: 1,000
G: 999
H: 50
I: 10

Answer:
    <think>
<think>
Okay, so I have this question here where Bob writes down a number between 1 and 1,000, and Mary has to figure out what it is by asking yes/no questions. Mary knows Bob always tells the truth, so she can rely on his answers. The question is about determining the number of questions Mary needs to ask in the worst case if she uses the optimal strategy.

Hmm, I think this is a classic information theory problem. I remember something about binary search being the optimal way to find a number in a range. Let me think about how binary search works. So, binary search repeatedly divides the possible options in half. If you have a sorted list, each yes/no question essentially halves the range of possibilities.

Wait, so the idea is that each question gives one bit of information. Since Mary is trying to find the number, she needs to cover all possibilities from 1 to 1,000. So the total number of possible numbers is 1,000. To find out how many bits (yes/no questions) are needed, I should calculate the logarithm base 2 of 1,000.

Let me calculate that. So log2(1000) is approximately... Well, I know that 2^10 is 1024, which is about 1000. So log2(1000) is just a bit less than 10, like around 9.96. Since you can't ask a fraction of a question, you round up to the next whole number. So that would be 10 questions.

Wait, but wait a minute. Let me make sure. Let's see: 2^9 is 512, which is less than 1000. So after 9 questions, you can distinguish between 512 numbers. But since 1000 is more than 512, you need another question, making it 10. So yes, 10 questions would be enough because 2^10 is 1024, which covers all 1000 possibilities.

So Mary would need exactly 10 questions in the worst case. Looking at the options, option I is 10. So the answer should be I.
</think>

To determine the number of "yes/no" questions Mary needs to ask Bob to identify a number between 1 and 1,000 in the worst case, we can use the concept of binary search. Each question effectively halves the range of possible numbers, and the minimum number of questions required is given by the logarithm base 2 of the total number of possibilities.

Here, the total number of possibilities is 1,000. Calculating the logarithm:

\[
\log_2(1000) \approx 9.96
\]

Since Mary cannot ask a fraction of a question, we round up to the next whole number, which is 10. Therefore, Mary will need exactly 10 questions in the worst case to determine the number. Among the given options, the correct answer is:

I: 10

Answer: I