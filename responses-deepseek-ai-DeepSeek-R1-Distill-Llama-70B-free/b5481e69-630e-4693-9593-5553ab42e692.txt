Answer the following multiple choice question, selecting from the answer A through to J. After thinking, reply directly with your answer. 

The last character of your response must be the letter you have chosen.

Question:

The length of bus cycle in 8086/8088 is four clock cycles, T1, T2, T3, T4 and an indeterminate number of wait state clock cycles denoted by Tw. The wait states are always inserted between

Options:

A: T1 & T2
B: T2 & T3
C: T3 & T4
D: T4 & T1

Answer:
    <think>
<think>
Okay, so I've got this question about the 8086/8088 bus cycle and wait states. Hmm, I remember that the 8086 is a microprocessor from Intel, and it has a bus cycle that's divided into several clock cycles. The question says the bus cycle is four clock cycles: T1, T2, T3, T4, and some wait states Tw in between. Wait states are added to give the processor more time when needed, like when accessing slower memory.

Wait, so the main thing here is where the wait states are inserted. The options are between T1 & T2, T2 & T3, T3 & T4, or T4 & T1.

I think the bus cycle is a sequence of these T states. The 8086 uses a concept called the bus cycle which includes several states. Each machine cycle (like a read or write) consists of several T-states. I remember that in the 8086, the bus cycle is divided into four T states: T1 to T4. 

Wait states are additional clock cycles inserted into the bus cycle to allow for memory accesses that take longer than the standard time. These wait states happen after a certain T state. From what I recall, in the 8086, the processor inserts wait states after T3. So the sequence would go T1, T2, T3, then wait states Tw, and then T4.

Wait, let me think again. The bus cycle starts with T1, then T2, T3, and then T4. But wait states can be inserted to extend the cycle. If the processor is accessing something that takes more time, it adds wait states. So where are these inserted? I think that the wait states come after T3. So the next T state after Tw would be T4.

Alternatively, another way to remember is that the standard bus cycle without waits is T1-T4. When a wait is needed, it's inserted between T3 and T4. Wait, no, that doesn't sound right. Because T4 is the last state, so wait states would come after T3, before T4, making the cycle longer.

Wait, another approach: in the 8086, the CPU generates the clock signal and the clock enables. The bus cycle typically starts at T1, with the address being placed on the bus. Then in T2, the data is read or written. T3 is when the data is strobed, and T4 is when everything is completed. So wait states would be inserted between T3 and T4, causing the cycle to take longer.

Alternatively, maybe the wait states are inserted between T4 and the next T1. No, that doesn't make sense because T4 is the end of the current cycle. So wait states would be after T3, making the cycle T1, T2, T3, Tw (wait), then T4. So the wait states are between T3 and T4.

So looking at the options, option C is between T3 & T4. So the answer should be option C.
</think>

The 8086/8088 bus cycle consists of four clock cycles: T1, T2, T3, and T4, with wait states (Tw) inserted as needed to accommodate slower memory accesses. The wait states are specifically inserted between T3 and T4, extending the bus cycle duration. This ensures that the processor has sufficient time to complete data transactions before proceeding to the next cycle.

Option C correctly identifies that wait states are inserted between T3 and T4.

Answer: C